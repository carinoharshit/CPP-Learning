// https://leetcode.com/problems/min-stack/

class MinStack {
    list<int>min_stack;
    list<int>st;
public:
    /** initialize your data structure here. */
    MinStack() {
        
    }
    
    void push(int val) {
        st.push_back(val);
        if(min_stack.empty() || min_stack.back() >= val){
            min_stack.push_back(val);
        }
    }
    
    void pop() {
        if(!st.empty()){
            int remove_val = st.back();
            st.erase(--st.end());
            if(min_stack.back() == remove_val){
                min_stack.erase(--min_stack.end());
            }
        }
    }
    
    int top() {
        return st.empty()?-1:st.back();
    }
    
    int getMin() {
        return min_stack.empty()?-1:min_stack.back();
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
